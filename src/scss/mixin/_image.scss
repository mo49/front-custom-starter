/*
@mixin image($url, $w: 300, $h: 300, $scale: 1){
  @include hide-txt();
  $width: ceil($w * $scale) + px;
  $height: ceil($h * $scale) + px;
  background-image: url('../img/' + $url);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: $width $height;
  width: $width;
  height: $height;
}

// PCとSPで同じ画像のケース
@mixin same-image($url, $w: 300, $h: 300, $pc-scale: 1, $sp-scale: 0.5){
  @include image($url,$w,$h,$pc-scale);
  @include env(sp) {
    @include image($url,$w,$h,$sp-scale);
  }
}
*/

// postCss Assets
@mixin image($url, $density: 1, $scale:1, $hidetext: 0){
  @if $hidetext == 1 {
    @include hide-txt();
  }
  $scale: 1 / $scale;
  // $basePath: '../img/';
  background-repeat: no-repeat;
  background-position: center center;
  background-image: resolve($url);
  // background-image: url($basePath + $url);
  background-size: size($url,$density * $scale);
  width: width($url,$density * $scale);
  height: height($url,$density * $scale);
}
// SPをベースにしてPCも同じ画像のケース
@mixin same-image($url, $scale:1, $hidetext: 0){
  $scale: 1 / $scale;
  @include image($url,1 * $scale);
  @include env(sp) {
    @include image($url,2 * $scale);
  }
}

/*
$koma: コマ数
$animation-name: ユニークな名前（keyframesの上書き防止）

// 使用例
.horizontal{
  @include sprite-image(
    horizontal_pc,'../img/sprite_horizontal.png',
    708,455,33,30,
    1,alternate,horizontal
  );
}
*/
// simple ex.
// @include sprite-image(sample,'./sprite.png',600,400,20);
@mixin sprite-image(
  $animation-name, $url, $w, $h, $koma, $fps:30,
  $iteration:infinite, $direction:normal, $layout:vertical
) {
  @if $layout == horizontal{
    height: $h + px;
    width: 0;
    padding-left: $w + px;
    background-size: ($w * $koma + px) ($h + px);
    &.active{
      animation-name: $animation-name;
    }
    @keyframes #{$animation-name}_horizontal{
      0%    { background-position: 0 0; }
      100%  { background-position: (- $koma * $w + px) 0; }
    }
  } @else {
    height: 0;
    width: $w + px;
    padding-top: $h + px;
    background-size: ($w + px) ($h * $koma + px);
    &.active{
      animation-name: $animation-name;
    }
    @keyframes #{$animation-name}_vertical{
      0%    { background-position: 0 0; }
      100%  { background-position: 0 (- $koma * $h + px); }
    }
  }
  animation-duration: $koma * round(1000 / $fps) + ms;
  animation-timing-function: steps($koma);
  animation-iteration-count: $iteration;
  animation-direction: $direction;
  animation-fill-mode: forwards;
  overflow: hidden;
  background-position: 0 0;
  background-image: url($url);
}
